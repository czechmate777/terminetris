#!/bin/bash

# Constants/Variables
frameDelay=0.5
animatePid=""
w=$(tput cols)
h=$(tput lines)
for (( g=0; g<$w*$h; g++)); do
	grid[$g]=0
done
temp=$(<startingGrid)
grid=(${temp/// })
echo ${grid[@]} >/dev/shm/grid

# Functions
function backLines {
	tput cuu ${h}
}

function drawBlank {
	backLines
	for (( c=1; c<=$w; c++ ))
	do
		blanker+=" "
	done
	echo -en "\r$blanker"
	for (( i=1; i<=$h; i++ ))
	do
		echo -en "$blanker"
	done
}

function draw {
	echo -en '\r'
	temp=$(</dev/shm/grid)
	grid=(${temp/// })
	for g in ${grid[@]}; do
		if [[ "$g" = "0" ]]; then
			echo -n " "
		fi
		if [[ "$g" > "0" ]]; then
			echo -n "="
		fi
	done
}

function redraw {
	backLines
	draw
}

function move {
	allok=true
	temp=$(</dev/shm/grid)
	grid=(${temp/// })
	movers=()
	for (( i = $h*$w-1; i >= 0; i-- )); do
		if [ ${grid[i]} == 2 ]; then
			pos=$((i % w))
			ppos=$(($pos+$1))
			if [[ ${grid[$(($i+$1))]} != 0 ]] || [[ $ppos < 0 ]] || [[ $ppos > $w-1 ]]; then
				i=-1
				allok=false
			else
				movers+=("$i")
			fi
		fi
	done
	if [[ allok ]]; then
		for (( i = 0; i < ${#movers[@]}; i++ )); do
			grid[$((${movers[$i]}+$1))]=2
			grid[${movers[$i]}]=0
		done
	fi
	echo ${grid[@]} >/dev/shm/grid
}

# Animate loop
function step {
	temp=$(</dev/shm/grid)
	grid=(${temp/// })
	for (( i = $h*$w-1; i >= 0; i-- )); do
		# Acitve Blocks
		if [ ${grid[i]} == 2 ]; then
			if [ "${grid[i+w]}" == "0" ]; then
				grid[i+w]=2
				grid[i]=0
			else
				grid[i]=1
				grid[(($RANDOM % $w-1))]=2
			fi
		fi
	done
	echo ${grid[@]} >/dev/shm/grid
}
function animate {
	while true; do
		step
		redraw
		sleep $frameDelay
	done
}

draw
animate &
animatePid=$!

# Input loop
while true; do
read -rsn1 input1
if [ "$input1" = "q" ]; then
	kill $animatePid
	drawBlank
	backLines
	echo -e "\nTerminetris (c) 2017 Adam Miller\n"
	exit
fi
# if [ "$input1" = "a" ]; then
# 	temp=$(</dev/shm/grid)
# 	grid=(${temp/// })
# 	grid[(($RANDOM % ${#grid[@]}))]=2
# 	echo ${grid[@]} >/dev/shm/grid
# fi
if [ "$input1" = $'\e' ]; then
	read -rsn1 -t 0.0001 input2
	read -rsn1 -t 0.0001 input3
	read -rsn1 -t 0.0001 input4
	if [ "$input3" = "A" ]; then
	    input1="UP"
	fi
	if [ "$input3" = "B" ]; then
	    step
	fi
	if [ "$input3" = "C" ]; then
		echo "RIGHT" >> log
	    move 1
	fi
	if [ "$input3" = "D" ]; then
		echo "LEFT" >> log
	    move -1
	fi
fi
redraw
done
